{
  "document_title": "CVE-2022-36086",
  "document_type": "SUSE CVE",
  "document_publisher": {
    "type": "Vendor",
    "contact_details": "security@suse.de",
    "issuing_authority": "SUSE Security Team"
  },
  "document_tracking": {
    "identification": {
      "id": "SUSE CVE-2022-36086"
    },
    "status": "Interim",
    "version": "1",
    "revision_history": {
      "revision": {
        "number": "1",
        "date": "2022-11-03T00:41:46Z",
        "description": "current"
      }
    },
    "initial_release_date": "2022-11-03T00:41:46Z",
    "current_release_date": "2022-11-03T00:41:46Z",
    "generator": {
      "engine": "cve-database/bin/generate-cvrf-cve.pl",
      "date": "2020-12-27T01:00:00Z"
    }
  },
  "document_notes": [
    {
      "text": "CVE-2022-36086",
      "title": "CVE",
      "type": "Summary"
    },
    {
      "text": "linked_list_allocator is an allocator usable for no_std systems. Prior to version 0.10.2, the heap initialization methods were missing a minimum size check for the given heap size argument. This could lead to out-of-bound writes when a heap was initialized with a size smaller than `3 * size_of::<usize>` because of metadata write operations. This vulnerability impacts all the initialization functions on the `Heap` and `LockedHeap` types, including `Heap::new`, `Heap::init`, `Heap::init_from_slice`, and `LockedHeap::new`. It also affects multiple uses of the `Heap::extend` method. Version 0.10.2 contains a patch for the issue. As a workaround, ensure that the heap is only initialized with a size larger than `3 * size_of::<usize>` and that the `Heap::extend` method is only called with sizes larger than `2 * size_of::<usize>()`. Also, ensure that the total heap size is (and stays) a multiple of `2 * size_of::<usize>()`.",
      "title": "Mitre CVE Description",
      "type": "Description"
    },
    {
      "text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "title": "Terms of Use",
      "type": "Legal Disclaimer"
    }
  ],
  "document_references": [
    {
      "type": "Self",
      "url": "https://www.suse.com/support/security/rating/",
      "description": "SUSE Security Ratings"
    }
  ],
  "product_tree": {
    "branch": [
      {
        "type": "Product Family",
        "name": "openSUSE Tumbleweed",
        "branch": [
          {
            "type": "Product Name",
            "name": "openSUSE Tumbleweed",
            "full_product_name": {
              "text": "openSUSE Tumbleweed",
              "product_id": "openSUSE Tumbleweed",
              "cpe": "cpe:/o:opensuse:tumbleweed"
            }
          }
        ],
        "full_product_name": {}
      },
      {
        "type": "Product Version",
        "name": "cargo-audit-advisory-db-20221102-1.1",
        "full_product_name": {
          "text": "cargo-audit-advisory-db-20221102-1.1",
          "product_id": "cargo-audit-advisory-db-20221102-1.1"
        }
      }
    ],
    "relationship": [
      {
        "product_reference": "cargo-audit-advisory-db-20221102-1.1",
        "relation_type": "Default Component Of",
        "relates_to_product_reference": "openSUSE Tumbleweed"
      }
    ]
  },
  "vulnerability": [
    {
      "notes": [
        {
          "text": "linked_list_allocator is an allocator usable for no_std systems. Prior to version 0.10.2, the heap initialization methods were missing a minimum size check for the given heap size argument. This could lead to out-of-bound writes when a heap was initialized with a size smaller than `3 * size_of::<usize>` because of metadata write operations. This vulnerability impacts all the initialization functions on the `Heap` and `LockedHeap` types, including `Heap::new`, `Heap::init`, `Heap::init_from_slice`, and `LockedHeap::new`. It also affects multiple uses of the `Heap::extend` method. Version 0.10.2 contains a patch for the issue. As a workaround, ensure that the heap is only initialized with a size larger than `3 * size_of::<usize>` and that the `Heap::extend` method is only called with sizes larger than `2 * size_of::<usize>()`. Also, ensure that the total heap size is (and stays) a multiple of `2 * size_of::<usize>()`.",
          "title": "Vulnerability Description",
          "type": "General"
        }
      ],
      "cve": "CVE-2022-36086",
      "product_statuses": [
        {
          "type": "Fixed",
          "product_id": [
            "openSUSE Tumbleweed:cargo-audit-advisory-db-20221102-1.1"
          ]
        }
      ],
      "threats": [
        {
          "type": "Impact",
          "description": "critical"
        }
      ],
      "cvss_score_sets": {
        "score_set_v_2": {},
        "score_set_v_3": {
          "base_score_v_3": "9.8",
          "vector_v_3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
        }
      }
    }
  ]
}
