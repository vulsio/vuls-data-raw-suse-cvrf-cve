{
  "document_title": "CVE-2023-45666",
  "document_type": "SUSE CVE",
  "document_publisher": {
    "type": "Vendor",
    "contact_details": "security@suse.de",
    "issuing_authority": "SUSE Security Team"
  },
  "document_tracking": {
    "identification": {
      "id": "SUSE CVE-2023-45666"
    },
    "status": "Interim",
    "version": "1",
    "revision_history": {
      "revision": {
        "number": "1",
        "date": "2023-10-23T23:08:39Z",
        "description": "current"
      }
    },
    "initial_release_date": "2023-10-23T23:08:39Z",
    "current_release_date": "2023-10-23T23:08:39Z",
    "generator": {
      "engine": "cve-database/bin/generate-cvrf-cve.pl",
      "date": "2020-12-27T01:00:00Z"
    }
  },
  "document_notes": [
    {
      "text": "CVE-2023-45666",
      "title": "CVE",
      "type": "Summary"
    },
    {
      "text": "stb_image is a single file MIT licensed library for processing images.  It may look like `stbi__load_gif_main` doesn’t give guarantees about the content of output value `*delays` upon failure. Although it sets `*delays` to zero at the beginning, it doesn’t do it in case the image is not recognized as GIF and a call to `stbi__load_gif_main_outofmem` only frees possibly allocated memory in `*delays` without resetting it to zero. Thus it would be fair to say the caller of `stbi__load_gif_main` is responsible to free the allocated memory in `*delays` only if `stbi__load_gif_main` returns a non null value. However at the same time the function may return null value, but fail to free the memory in `*delays` if internally `stbi__convert_format` is called and fails. Thus the issue may lead to a memory leak if the caller chooses to free `delays` only when `stbi__load_gif_main` didn’t fail or to a double-free if the `delays` is always freed",
      "title": "Mitre CVE Description",
      "type": "Description"
    },
    {
      "text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "title": "Terms of Use",
      "type": "Legal Disclaimer"
    }
  ],
  "document_references": [
    {
      "type": "Self",
      "url": "https://www.suse.com/support/security/rating/",
      "description": "SUSE Security Ratings"
    }
  ],
  "product_tree": {},
  "vulnerability": [
    {
      "notes": [
        {
          "text": "stb_image is a single file MIT licensed library for processing images.  It may look like `stbi__load_gif_main` doesn’t give guarantees about the content of output value `*delays` upon failure. Although it sets `*delays` to zero at the beginning, it doesn’t do it in case the image is not recognized as GIF and a call to `stbi__load_gif_main_outofmem` only frees possibly allocated memory in `*delays` without resetting it to zero. Thus it would be fair to say the caller of `stbi__load_gif_main` is responsible to free the allocated memory in `*delays` only if `stbi__load_gif_main` returns a non null value. However at the same time the function may return null value, but fail to free the memory in `*delays` if internally `stbi__convert_format` is called and fails. Thus the issue may lead to a memory leak if the caller chooses to free `delays` only when `stbi__load_gif_main` didn’t fail or to a double-free if the `delays` is always freed",
          "title": "Vulnerability Description",
          "type": "General"
        }
      ],
      "cve": "CVE-2023-45666",
      "threats": [
        {
          "type": "Impact",
          "description": "important"
        }
      ],
      "cvss_score_sets": {
        "score_set_v_2": {},
        "score_set_v_3": {
          "base_score_v_3": "7.3",
          "vector_v_3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
        }
      }
    }
  ]
}
