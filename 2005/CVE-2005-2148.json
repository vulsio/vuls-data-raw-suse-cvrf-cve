{
	"document_title": "CVE-2005-2148",
	"document_type": "SUSE CVE",
	"document_publisher": {
		"type": "Vendor",
		"contact_details": "security@suse.de",
		"issuing_authority": "SUSE Security Team"
	},
	"document_tracking": {
		"identification": {
			"id": "SUSE CVE-2005-2148"
		},
		"status": "Interim",
		"version": "1",
		"revision_history": {
			"revision": {
				"number": "3",
				"date": "2021-06-09T08:34:18Z",
				"description": "current"
			}
		},
		"initial_release_date": "2021-05-30T12:32:58Z",
		"current_release_date": "2021-06-09T08:34:18Z",
		"generator": {
			"engine": "cve-database/bin/generate-cvrf-cve.pl",
			"date": "2020-12-27T01:00:00Z"
		}
	},
	"document_notes": [
		{
			"text": "CVE-2005-2148",
			"title": "CVE",
			"type": "Summary"
		},
		{
			"text": "Cacti 0.8.6e and earlier does not perform proper input validation to protect against common attacks, which allows remote attackers to execute arbitrary commands or SQL by sending a legitimate value in a POST request or cookie, then specifying the attack string in the URL, which causes the get_request_var function to return the wrong value in the $_REQUEST variable, which is cleansed while the original malicious $_GET value remains unmodified, as demonstrated in (1) graph_image.php and (2) graph.php.",
			"title": "Mitre CVE Description",
			"type": "Description"
		},
		{
			"text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
			"title": "Terms of Use",
			"type": "Legal Disclaimer"
		}
	],
	"document_references": [
		{
			"type": "Self",
			"url": "https://lists.opensuse.org/opensuse-security-announce/2005-07/msg00010.html",
			"description": "E-Mail link for SUSE-SR:2005:017"
		},
		{
			"type": "Self",
			"url": "https://www.suse.com/support/security/rating/",
			"description": "SUSE Security Ratings"
		}
	],
	"product_tree": {},
	"vulnerability": [
		{
			"notes": [
				{
					"text": "Cacti 0.8.6e and earlier does not perform proper input validation to protect against common attacks, which allows remote attackers to execute arbitrary commands or SQL by sending a legitimate value in a POST request or cookie, then specifying the attack string in the URL, which causes the get_request_var function to return the wrong value in the $_REQUEST variable, which is cleansed while the original malicious $_GET value remains unmodified, as demonstrated in (1) graph_image.php and (2) graph.php.",
					"title": "Vulnerability Description",
					"type": "General"
				}
			],
			"cve": "CVE-2005-2148",
			"threats": [
				{
					"type": "Impact",
					"description": "important"
				}
			],
			"cvss_score_sets": {
				"score_set_v_2": {
					"base_score_v_2": "7.5",
					"vector_v_2": "AV:N/AC:L/Au:N/C:P/I:P/A:P"
				},
				"score_set_v_3": {}
			}
		}
	]
}
