{
  "document_title": "CVE-2021-29471",
  "document_type": "SUSE CVE",
  "document_publisher": {
    "type": "Vendor",
    "contact_details": "security@suse.de",
    "issuing_authority": "SUSE Security Team"
  },
  "document_tracking": {
    "identification": {
      "id": "SUSE CVE-2021-29471"
    },
    "status": "Interim",
    "version": "1",
    "revision_history": {
      "revision": {
        "number": "6",
        "date": "2022-10-15T15:04:34Z",
        "description": "current"
      }
    },
    "initial_release_date": "2021-05-30T14:49:29Z",
    "current_release_date": "2022-10-15T15:04:34Z",
    "generator": {
      "engine": "cve-database/bin/generate-cvrf-cve.pl",
      "date": "2020-12-27T01:00:00Z"
    }
  },
  "document_notes": [
    {
      "text": "CVE-2021-29471",
      "title": "CVE",
      "type": "Summary"
    },
    {
      "text": "Synapse is a Matrix reference homeserver written in python (pypi package matrix-synapse). Matrix is an ecosystem for open federated Instant Messaging and VoIP. In Synapse before version 1.33.2 \"Push rules\" can specify conditions under which they will match, including `event_match`, which matches event content against a pattern including wildcards. Certain patterns can cause very poor performance in the matching engine, leading to a denial-of-service when processing moderate length events. The issue is patched in version 1.33.2. A potential workaround might be to prevent users from making custom push rules, by blocking such requests at a reverse-proxy.",
      "title": "Mitre CVE Description",
      "type": "Description"
    },
    {
      "text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "title": "Terms of Use",
      "type": "Legal Disclaimer"
    }
  ],
  "document_references": [
    {
      "type": "Self",
      "url": "https://www.suse.com/support/security/rating/",
      "description": "SUSE Security Ratings"
    }
  ],
  "product_tree": {
    "branch": [
      {
        "type": "Product Family",
        "name": "openSUSE Tumbleweed",
        "branch": [
          {
            "type": "Product Name",
            "name": "openSUSE Tumbleweed",
            "full_product_name": {
              "text": "openSUSE Tumbleweed",
              "product_id": "openSUSE Tumbleweed",
              "cpe": "cpe:/o:opensuse:tumbleweed"
            }
          }
        ],
        "full_product_name": {}
      },
      {
        "type": "Product Version",
        "name": "matrix-synapse-1.43.0-1.1",
        "full_product_name": {
          "text": "matrix-synapse-1.43.0-1.1",
          "product_id": "matrix-synapse-1.43.0-1.1"
        }
      }
    ],
    "relationship": [
      {
        "product_reference": "matrix-synapse-1.43.0-1.1",
        "relation_type": "Default Component Of",
        "relates_to_product_reference": "openSUSE Tumbleweed"
      }
    ]
  },
  "vulnerability": {
    "notes": [
      {
        "text": "Synapse is a Matrix reference homeserver written in python (pypi package matrix-synapse). Matrix is an ecosystem for open federated Instant Messaging and VoIP. In Synapse before version 1.33.2 \"Push rules\" can specify conditions under which they will match, including `event_match`, which matches event content against a pattern including wildcards. Certain patterns can cause very poor performance in the matching engine, leading to a denial-of-service when processing moderate length events. The issue is patched in version 1.33.2. A potential workaround might be to prevent users from making custom push rules, by blocking such requests at a reverse-proxy.",
        "title": "Vulnerability Description",
        "type": "General"
      }
    ],
    "cve": "CVE-2021-29471",
    "product_statuses": [
      {
        "type": "Fixed",
        "product_id": [
          "openSUSE Tumbleweed:matrix-synapse-1.43.0-1.1"
        ]
      }
    ],
    "threats": [
      {
        "type": "Impact",
        "description": "moderate"
      }
    ],
    "cvss_score_sets": {
      "score_set_v_2": {
        "base_score_v_2": "5",
        "vector_v_2": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
      },
      "score_set_v_3": {
        "base_score_v_3": "5.3",
        "vector_v_3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
      }
    }
  }
}
