{
	"document_title": "CVE-2021-29510",
	"document_type": "SUSE CVE",
	"document_publisher": {
		"type": "Vendor",
		"contact_details": "security@suse.de",
		"issuing_authority": "SUSE Security Team"
	},
	"document_tracking": {
		"identification": {
			"id": "SUSE CVE-2021-29510"
		},
		"status": "Interim",
		"version": "1",
		"revision_history": {
			"revision": {
				"number": "7",
				"date": "2023-06-23T23:41:54Z",
				"description": "current"
			}
		},
		"initial_release_date": "2021-05-30T14:49:31Z",
		"current_release_date": "2023-06-23T23:41:54Z",
		"generator": {
			"engine": "cve-database/bin/generate-cvrf-cve.pl",
			"date": "2020-12-27T01:00:00Z"
		}
	},
	"document_notes": [
		{
			"text": "CVE-2021-29510",
			"title": "CVE",
			"type": "Summary"
		},
		{
			"text": "Pydantic is a data validation and settings management using Python type hinting. In affected versions passing either `'infinity'`, `'inf'` or `float('inf')` (or their negatives) to `datetime` or `date` fields causes validation to run forever with 100% CPU usage (on one CPU). Pydantic has been patched with fixes available in the following versions: v1.8.2, v1.7.4, v1.6.2. All these versions are available on pypi(https://pypi.org/project/pydantic/#history), and will be available on conda-forge(https://anaconda.org/conda-forge/pydantic) soon. See the changelog(https://pydantic-docs.helpmanual.io/) for details. If you absolutely can't upgrade, you can work around this risk using a validator(https://pydantic-docs.helpmanual.io/usage/validators/) to catch these values. This is not an ideal solution (in particular you'll need a slightly different function for datetimes), instead of a hack like this you should upgrade pydantic. If you are not using v1.8.x, v1.7.x or v1.6.x and are unable to upgrade to a fixed version of pydantic, please create an issue at https://github.com/samuelcolvin/pydantic/issues requesting a back-port, and we will endeavour to release a patch for earlier versions of pydantic.",
			"title": "Mitre CVE Description",
			"type": "Description"
		},
		{
			"text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
			"title": "Terms of Use",
			"type": "Legal Disclaimer"
		}
	],
	"document_references": [
		{
			"type": "Self",
			"url": "https://www.suse.com/support/security/rating/",
			"description": "SUSE Security Ratings"
		}
	],
	"product_tree": {
		"branch": [
			{
				"type": "Product Family",
				"name": "openSUSE Tumbleweed",
				"branch": [
					{
						"type": "Product Name",
						"name": "openSUSE Tumbleweed",
						"full_product_name": {
							"text": "openSUSE Tumbleweed",
							"product_id": "openSUSE Tumbleweed",
							"cpe": "cpe:/o:opensuse:tumbleweed"
						}
					}
				],
				"full_product_name": {}
			},
			{
				"type": "Product Version",
				"name": "python36-pydantic-1.8.2-1.2",
				"full_product_name": {
					"text": "python36-pydantic-1.8.2-1.2",
					"product_id": "python36-pydantic-1.8.2-1.2"
				}
			},
			{
				"type": "Product Version",
				"name": "python38-pydantic-1.8.2-1.2",
				"full_product_name": {
					"text": "python38-pydantic-1.8.2-1.2",
					"product_id": "python38-pydantic-1.8.2-1.2"
				}
			},
			{
				"type": "Product Version",
				"name": "python39-pydantic-1.8.2-1.2",
				"full_product_name": {
					"text": "python39-pydantic-1.8.2-1.2",
					"product_id": "python39-pydantic-1.8.2-1.2"
				}
			}
		],
		"relationship": [
			{
				"product_reference": "python36-pydantic-1.8.2-1.2",
				"relation_type": "Default Component Of",
				"relates_to_product_reference": "openSUSE Tumbleweed"
			},
			{
				"product_reference": "python38-pydantic-1.8.2-1.2",
				"relation_type": "Default Component Of",
				"relates_to_product_reference": "openSUSE Tumbleweed"
			},
			{
				"product_reference": "python39-pydantic-1.8.2-1.2",
				"relation_type": "Default Component Of",
				"relates_to_product_reference": "openSUSE Tumbleweed"
			}
		]
	},
	"vulnerability": [
		{
			"notes": [
				{
					"text": "Pydantic is a data validation and settings management using Python type hinting. In affected versions passing either `'infinity'`, `'inf'` or `float('inf')` (or their negatives) to `datetime` or `date` fields causes validation to run forever with 100% CPU usage (on one CPU). Pydantic has been patched with fixes available in the following versions: v1.8.2, v1.7.4, v1.6.2. All these versions are available on pypi(https://pypi.org/project/pydantic/#history), and will be available on conda-forge(https://anaconda.org/conda-forge/pydantic) soon. See the changelog(https://pydantic-docs.helpmanual.io/) for details. If you absolutely can't upgrade, you can work around this risk using a validator(https://pydantic-docs.helpmanual.io/usage/validators/) to catch these values. This is not an ideal solution (in particular you'll need a slightly different function for datetimes), instead of a hack like this you should upgrade pydantic. If you are not using v1.8.x, v1.7.x or v1.6.x and are unable to upgrade to a fixed version of pydantic, please create an issue at https://github.com/samuelcolvin/pydantic/issues requesting a back-port, and we will endeavour to release a patch for earlier versions of pydantic.",
					"title": "Vulnerability Description",
					"type": "General"
				}
			],
			"cve": "CVE-2021-29510",
			"product_statuses": [
				{
					"type": "Fixed",
					"product_id": [
						"openSUSE Tumbleweed:python36-pydantic-1.8.2-1.2",
						"openSUSE Tumbleweed:python38-pydantic-1.8.2-1.2",
						"openSUSE Tumbleweed:python39-pydantic-1.8.2-1.2"
					]
				}
			],
			"threats": [
				{
					"type": "Impact",
					"description": "important"
				}
			],
			"cvss_score_sets": {
				"score_set_v_2": {
					"base_score_v_2": "5",
					"vector_v_2": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
				},
				"score_set_v_3": {
					"base_score_v_3": "7.5",
					"vector_v_3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
				}
			}
		}
	]
}
